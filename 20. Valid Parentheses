import java.util.Stack;

class Solution {
    public boolean isValid(String s) {
        Stack<Character> stack = new Stack<>();

        for (char c : s.toCharArray()) {
            // Push the opening brackets to the stack
            if (c == '(' || c == '[' || c == '{') {
                stack.push(c);
            } else {
                // Check if stack is empty (mismatch scenario)
                if (stack.isEmpty()) {
                    return false;
                }
                
                // Check if top of stack matches the current closing bracket
                char top = stack.peek();
                if ((c == ')' && top == '(') ||
                    (c == ']' && top == '[') ||
                    (c == '}' && top == '{')) {
                    stack.pop();
                } else {
                    return false; // Mismatched closing bracket
                }
            }
        }

        // Stack should be empty if all brackets are matched correctly
        return stack.isEmpty();
    }
}
